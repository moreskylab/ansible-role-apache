---
# Setup variables
- name: Include OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"
  tags:
    - always

# Install packages
- name: Install required packages
  ansible.builtin.package:
    name: "{{ apache_packages }}"
    state: present
  tags:
    - install

# Configure Apache service
- name: Configure Apache main configuration
  ansible.builtin.template:
    src: apache2.conf.j2
    dest: "{{ apache_config_path }}"
    owner: root
    group: root
    mode: '0644'
  notify: Restart apache
  tags:
    - configure

# Create virtual host configurations
- name: Configure virtual hosts
  ansible.builtin.template:
    src: vhost.conf.j2
    dest: "{{ apache_vhosts_path }}/{{ item.name }}.conf"
    owner: root
    group: root
    mode: '0644'
  with_items: "{{ apache_vhosts }}"
  notify: Restart apache
  tags:
    - configure
    - vhosts

# Ensure directories exist
- name: Ensure document root directories exist
  ansible.builtin.file:
    path: "{{ item.document_root }}"
    state: directory
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    mode: '0755'
  with_items: "{{ apache_vhosts }}"
  tags:
    - configure
    - vhosts

# Configure firewall if enabled
- name: Configure firewall
  ansible.builtin.include_tasks: firewall.yml
  when: apache_configure_firewall | bool
  tags:
    - firewall

# Ensure service is running
- name: Ensure Apache service is enabled and started
  ansible.builtin.service:
    name: "{{ apache_service_name }}"
    state: started
    enabled: true
  tags:
    - service
